#!/usr/bin/env python

""" 
This node move the mobile platform to achieve "weight shift" in golf swing

SUBSCIRBERS:
  + <move_command> (<Int16>) ~ get moving command from the swing node

PUBLISHERS:
  + <diff/cmd_vel> (<Twist>) ~ move the mobile platform in a direction with a specific velocity

"""

import rospy
import numpy as np
import math
from geometry_msgs.msg import Twist
from std_msgs.msg import Int16, Float32

STOP = 0
FORWARD = 1
BACKWARD = 2


class Moving:
    def __init__(self):
        '''
            This class set up and perform the swing
        '''
        self.vel_pub = rospy.Publisher("diff/cmd_vel", Twist, queue_size = 10)
        self.command_sub = rospy.Subscriber("move_command",Int16, self.command_callback)


        self.command_flag = STOP


    
    def command_callback(self, data):
        '''callback function for receiving move direction command
            Args:
                data (Int16) - command integer
            Returns:
                None
        '''
        self.command_flag = data.data


    def move_base(self):
        '''callback function for receiving move direction command
            Args:
                None
            Returns:
                None
        '''

        vel = Twist()
        if self.command_flag == FORWARD:
            vel.linear.x = -1.0
        elif self.command_flag == BACKWARD:
            vel.linear.x = 0.2
        else:
            vel.linear.x = 0.0
        self.vel_pub.publish(vel)



def main():
    """ The main() function. """
    #ros node init

    rospy.init_node('moving')
    r = rospy.Rate(10)

    moving = Moving()

    while not rospy.is_shutdown():
        moving.move_base()
        r.sleep()



if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass
